<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_parser_8py_source" xml:lang="en-US">
<title>parser.py</title>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_parser_8py_source_1l00001"/><link linkend="_namespacebym_1_1_b_y_m__project_1_1main__app_1_1parser">00001</link> <emphasis role="keyword">from</emphasis>&#32;selenium.webdriver&#32;<emphasis role="keyword">import</emphasis>&#32;Chrome
<anchor xml:id="_parser_8py_source_1l00002"/>00002 <emphasis role="keyword">from</emphasis>&#32;selenium.webdriver.common.by&#32;<emphasis role="keyword">import</emphasis>&#32;By
<anchor xml:id="_parser_8py_source_1l00003"/>00003 <emphasis role="keyword">from</emphasis>&#32;selenium.webdriver.common.keys&#32;<emphasis role="keyword">import</emphasis>&#32;Keys
<anchor xml:id="_parser_8py_source_1l00004"/>00004 <emphasis role="keyword">from</emphasis>&#32;selenium.webdriver.support&#32;<emphasis role="keyword">import</emphasis>&#32;expected_conditions&#32;<emphasis role="keyword">as</emphasis>&#32;EC
<anchor xml:id="_parser_8py_source_1l00005"/>00005 <emphasis role="keyword">from</emphasis>&#32;selenium.webdriver.support.ui&#32;<emphasis role="keyword">import</emphasis>&#32;WebDriverWait
<anchor xml:id="_parser_8py_source_1l00006"/>00006 <emphasis role="keyword">from</emphasis>&#32;selenium&#32;<emphasis role="keyword">import</emphasis>&#32;webdriver
<anchor xml:id="_parser_8py_source_1l00007"/>00007 <emphasis role="keyword">from</emphasis>&#32;selenium.webdriver.chrome.service&#32;<emphasis role="keyword">import</emphasis>&#32;Service&#32;<emphasis role="keyword">as</emphasis>&#32;ChromeService
<anchor xml:id="_parser_8py_source_1l00008"/>00008 <emphasis role="keyword">from</emphasis>&#32;webdriver_manager.chrome&#32;<emphasis role="keyword">import</emphasis>&#32;ChromeDriverManager
<anchor xml:id="_parser_8py_source_1l00009"/>00009 <emphasis role="keyword">from</emphasis>&#32;main_app.config&#32;<emphasis role="keyword">import</emphasis>&#32;urls_lavka,&#32;webdriver_name
<anchor xml:id="_parser_8py_source_1l00010"/>00010 <emphasis role="keyword">from</emphasis>&#32;bs4&#32;<emphasis role="keyword">import</emphasis>&#32;BeautifulSoup
<anchor xml:id="_parser_8py_source_1l00011"/>00011 <emphasis role="keyword">import</emphasis>&#32;asyncio
<anchor xml:id="_parser_8py_source_1l00012"/>00012 <emphasis role="keyword">from</emphasis>&#32;main_app.models&#32;<emphasis role="keyword">import</emphasis>&#32;Product,&#32;Shop,&#32;User,&#32;UnitOfMeasure
<anchor xml:id="_parser_8py_source_1l00013"/>00013 <emphasis role="keyword">from</emphasis>&#32;main_app.conversions_functions&#32;<emphasis role="keyword">import</emphasis>&#32;get_lavka_unit_id
<anchor xml:id="_parser_8py_source_1l00014"/>00014 
<anchor xml:id="_parser_8py_source_1l00015"/>00015 
<anchor xml:id="_parser_8py_source_1l00016"/><link linkend="_namespacebym_1_1_b_y_m__project_1_1main__app_1_1parser_1a741bfb7f8809b3d04e5d9c6509de9c69">00016</link> <emphasis role="keyword">def&#32;</emphasis>parse_by_address(user_id,&#32;city_street,&#32;number):
<anchor xml:id="_parser_8py_source_1l00017"/>00017 &#32;&#32;&#32;&#32;a&#32;=&#32;<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka">Lavka</link>(user_id)
<anchor xml:id="_parser_8py_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;asyncio.run(a.pars(&quot;Москва,&#32;Таллинская&#32;улица&quot;,&#32;&quot;34&quot;))</emphasis>
<anchor xml:id="_parser_8py_source_1l00019"/>00019 &#32;&#32;&#32;&#32;asyncio.run(a.pars(city_street,&#32;number))
<anchor xml:id="_parser_8py_source_1l00020"/>00020 &#32;&#32;&#32;&#32;a.sql_script()
<anchor xml:id="_parser_8py_source_1l00021"/>00021 
<anchor xml:id="_parser_8py_source_1l00022"/>00022 
<anchor xml:id="_parser_8py_source_1l00023"/><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser">00023</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser">Parser</link>:
<anchor xml:id="_parser_8py_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;&apos;&apos;!</emphasis>
<anchor xml:id="_parser_8py_source_1l00025"/>00025 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Определяет&#32;базавый&#32;класс&#32;используемый&#32;для&#32;парсинга&#32;всех&#32;сайтов</emphasis>
<anchor xml:id="_parser_8py_source_1l00026"/>00026 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&apos;&apos;&apos;</emphasis>
<anchor xml:id="_parser_8py_source_1l00027"/>00027 
<anchor xml:id="_parser_8py_source_1l00028"/><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser_1acfb5504aa987e575ccfbe05617190604">00028</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser_1acfb5504aa987e575ccfbe05617190604">__init__</link>(self,&#32;user_id,&#32;shop_id):
<anchor xml:id="_parser_8py_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;&apos;&apos;!</emphasis>
<anchor xml:id="_parser_8py_source_1l00030"/>00030 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Инициализирует&#32;класс&#32;Parser.</emphasis>
<anchor xml:id="_parser_8py_source_1l00031"/>00031 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;user_id</emphasis>
<anchor xml:id="_parser_8py_source_1l00032"/>00032 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;shop_id</emphasis>
<anchor xml:id="_parser_8py_source_1l00033"/>00033 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&apos;&apos;&apos;</emphasis>
<anchor xml:id="_parser_8py_source_1l00034"/><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser_1aed9cf2be1a6f7d6b919c1e785439841f">00034</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser_1aed9cf2be1a6f7d6b919c1e785439841f">user_obj</link>&#32;=&#32;User.objects.get(pk=user_id)
<anchor xml:id="_parser_8py_source_1l00035"/><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser_1a5c931b5a38f849cc37bef4901ce4b4d6">00035</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser_1a5c931b5a38f849cc37bef4901ce4b4d6">options</link>&#32;=&#32;webdriver.ChromeOptions()
<anchor xml:id="_parser_8py_source_1l00036"/><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser_1a6b93696ad189eeeb4ce00ce8ff8f2808">00036</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser_1a6b93696ad189eeeb4ce00ce8ff8f2808">product_list</link>&#32;=&#32;[]
<anchor xml:id="_parser_8py_source_1l00037"/><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser_1ab419c1f3c1d5bcc94f0bdb3af2b175a2">00037</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser_1ab419c1f3c1d5bcc94f0bdb3af2b175a2">shop_obj</link>&#32;=&#32;Shop.objects.get(pk=shop_id)
<anchor xml:id="_parser_8py_source_1l00038"/>00038 
<anchor xml:id="_parser_8py_source_1l00039"/><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser_1a86d3e44d06c24d8d354c5eb2ed5a8cde">00039</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser_1a86d3e44d06c24d8d354c5eb2ed5a8cde">sql_script</link>(self):
<anchor xml:id="_parser_8py_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;&apos;&apos;!&#32;Сохраняет&#32;в&#32;базу&#32;данных</emphasis>
<anchor xml:id="_parser_8py_source_1l00041"/>00041 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&apos;&apos;&apos;</emphasis>
<anchor xml:id="_parser_8py_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;-----START_SAVE_BD------&quot;</emphasis>)
<anchor xml:id="_parser_8py_source_1l00043"/>00043 
<anchor xml:id="_parser_8py_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;x&#32;<emphasis role="keywordflow">in</emphasis>&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser_1a6b93696ad189eeeb4ce00ce8ff8f2808">product_list</link>:
<anchor xml:id="_parser_8py_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;if&#32;x[&quot;unit&quot;]&#32;==&#32;&apos;шт.&apos;:</emphasis>
<anchor xml:id="_parser_8py_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;&#32;&#32;&#32;&#32;надо&#32;поработать&#32;c&#32;get&#32;UnitOfMeasure</emphasis>
<anchor xml:id="_parser_8py_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unit_obj&#32;=&#32;get_lavka_unit_id(x[<emphasis role="stringliteral">&apos;unit&apos;</emphasis>])
<anchor xml:id="_parser_8py_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_,&#32;created&#32;=&#32;Product.objects.get_or_create(user=self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser_1aed9cf2be1a6f7d6b919c1e785439841f">user_obj</link>,
<anchor xml:id="_parser_8py_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unit=unit_obj,
<anchor xml:id="_parser_8py_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shop=self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser_1ab419c1f3c1d5bcc94f0bdb3af2b175a2">shop_obj</link>,&#32;name=x[<emphasis role="stringliteral">&quot;name&quot;</emphasis>],
<anchor xml:id="_parser_8py_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;price=x[<emphasis role="stringliteral">&quot;price&quot;</emphasis>],&#32;amount=x[<emphasis role="stringliteral">&quot;amount&quot;</emphasis>],&#32;link=x[<emphasis role="stringliteral">&quot;link&quot;</emphasis>])
<anchor xml:id="_parser_8py_source_1l00052"/>00052 
<anchor xml:id="_parser_8py_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;-----END------&quot;</emphasis>)
<anchor xml:id="_parser_8py_source_1l00054"/>00054 
<anchor xml:id="_parser_8py_source_1l00055"/>00055 
<anchor xml:id="_parser_8py_source_1l00056"/><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka">00056</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka">Lavka</link>(<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser">Parser</link>):
<anchor xml:id="_parser_8py_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;&apos;&apos;!</emphasis>
<anchor xml:id="_parser_8py_source_1l00058"/>00058 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Определяет&#32;класс&#32;используемый&#32;для&#32;парсинга&#32;лавки.</emphasis>
<anchor xml:id="_parser_8py_source_1l00059"/>00059 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&apos;&apos;&apos;</emphasis>
<anchor xml:id="_parser_8py_source_1l00060"/>00060 
<anchor xml:id="_parser_8py_source_1l00061"/><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1ae79912d1031916b7daf34ee69d05e8d6">00061</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1ae79912d1031916b7daf34ee69d05e8d6">__init__</link>(self,&#32;user_id):
<anchor xml:id="_parser_8py_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;&apos;&apos;!</emphasis>
<anchor xml:id="_parser_8py_source_1l00063"/>00063 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Инициализирует&#32;класс&#32;Lavka.</emphasis>
<anchor xml:id="_parser_8py_source_1l00064"/>00064 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;user_id&#32;int</emphasis>
<anchor xml:id="_parser_8py_source_1l00065"/>00065 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&apos;&apos;&apos;</emphasis>
<anchor xml:id="_parser_8py_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;super().<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1ae79912d1031916b7daf34ee69d05e8d6">__init__</link>(user_id,&#32;1)
<anchor xml:id="_parser_8py_source_1l00067"/><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1a23885f0e3a25fe52b40160bf50b95d86">00067</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1a23885f0e3a25fe52b40160bf50b95d86">url_main</link>&#32;=&#32;<emphasis role="stringliteral">&quot;https://lavka.yandex.ru&quot;</emphasis>
<anchor xml:id="_parser_8py_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser_1a5c931b5a38f849cc37bef4901ce4b4d6">options</link>.add_argument(<emphasis role="stringliteral">&quot;--start-maximized&quot;</emphasis>)
<anchor xml:id="_parser_8py_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prefs&#32;=&#32;{<emphasis role="stringliteral">&quot;profile.managed_default_content_settings.images&quot;</emphasis>:&#32;2}
<anchor xml:id="_parser_8py_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser_1a5c931b5a38f849cc37bef4901ce4b4d6">options</link>.add_experimental_option(<emphasis role="stringliteral">&quot;prefs&quot;</emphasis>,&#32;prefs)
<anchor xml:id="_parser_8py_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser_1a5c931b5a38f849cc37bef4901ce4b4d6">options</link>.headless&#32;=&#32;<emphasis role="keyword">True</emphasis>
<anchor xml:id="_parser_8py_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser_1a5c931b5a38f849cc37bef4901ce4b4d6">options</link>.page_load_strategy&#32;=&#32;<emphasis role="stringliteral">&apos;eager&apos;</emphasis>
<anchor xml:id="_parser_8py_source_1l00073"/><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1aa4d243133ee2225c281004cada6c617f">00073</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1aa4d243133ee2225c281004cada6c617f">driver</link>&#32;=&#32;Chrome(options=self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser_1a5c931b5a38f849cc37bef4901ce4b4d6">options</link>,&#32;service=ChromeService(ChromeDriverManager().install()))
<anchor xml:id="_parser_8py_source_1l00074"/><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1ab11214453defaf1caacb34e33abbe04f">00074</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1ab11214453defaf1caacb34e33abbe04f">wait</link>&#32;=&#32;WebDriverWait(self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1aa4d243133ee2225c281004cada6c617f">driver</link>,&#32;100)
<anchor xml:id="_parser_8py_source_1l00075"/><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1ad7973256e11d6291b8641b3e438ca595">00075</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1ad7973256e11d6291b8641b3e438ca595">urls</link>&#32;=&#32;urls_lavka
<anchor xml:id="_parser_8py_source_1l00076"/><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1a928051a5a0fb32b70882272b9c97983c">00076</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1a928051a5a0fb32b70882272b9c97983c">sl_tags</link>&#32;=&#32;dict(product_block=<emphasis role="stringliteral">&quot;p10zc8qs&quot;</emphasis>,&#32;product_name=<emphasis role="stringliteral">&quot;l4t8cc8&quot;</emphasis>,&#32;product_link=<emphasis role="stringliteral">&quot;p11oed5n&quot;</emphasis>,
<anchor xml:id="_parser_8py_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;discount_price=<emphasis role="stringliteral">&quot;b1bvai5j&quot;</emphasis>,&#32;no_discount_price=<emphasis role="stringliteral">&quot;c1jd7nwq&quot;</emphasis>,&#32;amount_and_unit=<emphasis role="stringliteral">&quot;iks4ndv&quot;</emphasis>)
<anchor xml:id="_parser_8py_source_1l00078"/>00078 
<anchor xml:id="_parser_8py_source_1l00079"/><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1a44f7318d5af307484c100b74733461b3">00079</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">async&#32;def&#32;</emphasis><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1a44f7318d5af307484c100b74733461b3">get_data_product</link>(self,&#32;product):
<anchor xml:id="_parser_8py_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;&apos;&apos;!</emphasis>
<anchor xml:id="_parser_8py_source_1l00081"/>00081 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Выделяет&#32;из&#32;блока&#32;с&#32;информацией&#32;о&#32;продукте&#32;нужную&#32;и&#32;записывает&#32;в&#32;БД</emphasis>
<anchor xml:id="_parser_8py_source_1l00082"/>00082 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;product&#32;BeautifulSoup</emphasis>
<anchor xml:id="_parser_8py_source_1l00083"/>00083 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&apos;&apos;&apos;</emphasis>
<anchor xml:id="_parser_8py_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(product.find(class_=self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1a928051a5a0fb32b70882272b9c97983c">sl_tags</link>[<emphasis role="stringliteral">&quot;product_name&quot;</emphasis>])&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>)&#32;<emphasis role="keywordflow">and</emphasis>&#32;(
<anchor xml:id="_parser_8py_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;product.find(class_=self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1a928051a5a0fb32b70882272b9c97983c">sl_tags</link>[<emphasis role="stringliteral">&quot;product_link&quot;</emphasis>])&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>):
<anchor xml:id="_parser_8py_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;=&#32;product.find(class_=self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1a928051a5a0fb32b70882272b9c97983c">sl_tags</link>[<emphasis role="stringliteral">&quot;product_name&quot;</emphasis>]).get_text().replace(<emphasis role="stringliteral">&apos;­&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;&apos;</emphasis>)
<anchor xml:id="_parser_8py_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;print(name)</emphasis>
<anchor xml:id="_parser_8py_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;product.find(class_=self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1a928051a5a0fb32b70882272b9c97983c">sl_tags</link>[<emphasis role="stringliteral">&quot;discount_price&quot;</emphasis>])&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_parser_8py_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;price&#32;=&#32;int(
<anchor xml:id="_parser_8py_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;product.find(class_=self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1a928051a5a0fb32b70882272b9c97983c">sl_tags</link>[<emphasis role="stringliteral">&quot;discount_price&quot;</emphasis>]).get_text().replace(<emphasis role="stringliteral">&apos;₽&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;&apos;</emphasis>).replace(<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>,
<anchor xml:id="_parser_8py_source_1lemphasis role="stringliteral">&apos;&apos;</emphasis>).replace(
<anchor xml:id="_parser_8py_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos; &apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;&apos;</emphasis>))
<anchor xml:id="_parser_8py_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_parser_8py_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;price&#32;=&#32;int(
<anchor xml:id="_parser_8py_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;product.find(class_=self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1a928051a5a0fb32b70882272b9c97983c">sl_tags</link>[<emphasis role="stringliteral">&quot;no_discount_price&quot;</emphasis>]).get_text().replace(<emphasis role="stringliteral">&apos;₽&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;&apos;</emphasis>).replace(<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>,
<anchor xml:id="_parser_8py_source_1lemphasis role="stringliteral">&apos;&apos;</emphasis>).replace(
<anchor xml:id="_parser_8py_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos; &apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;&apos;</emphasis>))
<anchor xml:id="_parser_8py_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;link&#32;=&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1a23885f0e3a25fe52b40160bf50b95d86">url_main</link>&#32;+&#32;product.find(class_=self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1a928051a5a0fb32b70882272b9c97983c">sl_tags</link>[<emphasis role="stringliteral">&quot;product_link&quot;</emphasis>])[<emphasis role="stringliteral">&apos;href&apos;</emphasis>]
<anchor xml:id="_parser_8py_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;am_un&#32;=&#32;product.find(class_=self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1a928051a5a0fb32b70882272b9c97983c">sl_tags</link>[<emphasis role="stringliteral">&quot;amount_and_unit&quot;</emphasis>]).get_text()
<anchor xml:id="_parser_8py_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;amount&#32;=&#32;float(am_un[:am_un.find(<emphasis role="stringliteral">&apos; &apos;</emphasis>)].replace(<emphasis role="stringliteral">&apos;,&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;.&apos;</emphasis>))
<anchor xml:id="_parser_8py_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unit&#32;=&#32;am_un[am_un.find(<emphasis role="stringliteral">&apos; &apos;</emphasis>)&#32;+&#32;1:]
<anchor xml:id="_parser_8py_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_parser_1a6b93696ad189eeeb4ce00ce8ff8f2808">product_list</link>.append({<emphasis role="stringliteral">&quot;name&quot;</emphasis>:&#32;name,&#32;<emphasis role="stringliteral">&quot;price&quot;</emphasis>:&#32;price,&#32;<emphasis role="stringliteral">&quot;link&quot;</emphasis>:&#32;link,&#32;<emphasis role="stringliteral">&quot;amount&quot;</emphasis>:&#32;amount,&#32;<emphasis role="stringliteral">&quot;unit&quot;</emphasis>:&#32;unit})
<anchor xml:id="_parser_8py_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_parser_8py_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;print(&quot;pass&quot;)</emphasis>
<anchor xml:id="_parser_8py_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">pass</emphasis>
<anchor xml:id="_parser_8py_source_1l00106"/>00106 
<anchor xml:id="_parser_8py_source_1l00107"/><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1aa85beac3725cdc9934390e1c49fcb9f1">00107</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">async&#32;def&#32;</emphasis><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1aa85beac3725cdc9934390e1c49fcb9f1">get_data_html</link>(self,&#32;html):
<anchor xml:id="_parser_8py_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;&apos;&apos;!</emphasis>
<anchor xml:id="_parser_8py_source_1l00109"/>00109 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Разбивает&#32;html&#32;код&#32;на&#32;блоки&#32;по&#32;продуктам,&#32;асинхронно&#32;запускает&#32;их&#32;обработку</emphasis>
<anchor xml:id="_parser_8py_source_1l00110"/>00110 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;html&#32;string</emphasis>
<anchor xml:id="_parser_8py_source_1l00111"/>00111 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&apos;&apos;&apos;</emphasis>
<anchor xml:id="_parser_8py_source_1l00112"/>00112 
<anchor xml:id="_parser_8py_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;soup&#32;=&#32;BeautifulSoup(html,&#32;<emphasis role="stringliteral">&apos;html.parser&apos;</emphasis>)
<anchor xml:id="_parser_8py_source_1l00114"/>00114 
<anchor xml:id="_parser_8py_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;products&#32;=&#32;soup.find_all(class_=self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1a928051a5a0fb32b70882272b9c97983c">sl_tags</link>[<emphasis role="stringliteral">&quot;product_block&quot;</emphasis>])
<anchor xml:id="_parser_8py_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tasks&#32;=&#32;[]
<anchor xml:id="_parser_8py_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;loop2&#32;=&#32;asyncio.get_event_loop()
<anchor xml:id="_parser_8py_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;product&#32;<emphasis role="keywordflow">in</emphasis>&#32;products:
<anchor xml:id="_parser_8py_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task&#32;=&#32;loop2.create_task(self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1a44f7318d5af307484c100b74733461b3">get_data_product</link>(product))
<anchor xml:id="_parser_8py_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tasks.append(task)
<anchor xml:id="_parser_8py_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;asyncio.wait(tasks)
<anchor xml:id="_parser_8py_source_1l00122"/>00122 
<anchor xml:id="_parser_8py_source_1l00123"/><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1a16780d5d1ca7bb8cf262758e2dac66ee">00123</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">async&#32;def&#32;</emphasis><link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1a16780d5d1ca7bb8cf262758e2dac66ee">pars</link>(self,&#32;city_street,&#32;home):
<anchor xml:id="_parser_8py_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;&apos;&apos;!</emphasis>
<anchor xml:id="_parser_8py_source_1l00125"/>00125 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Парсит&#32;список&#32;продуктов&#32;с&#32;ценами&#32;яндекс&#32;лавки&#32;по&#32;определенному&#32;адресу</emphasis>
<anchor xml:id="_parser_8py_source_1l00126"/>00126 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Производит&#32;запись&#32;в&#32;базу&#32;данных</emphasis>
<anchor xml:id="_parser_8py_source_1l00127"/>00127 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;city_strit&#32;string</emphasis>
<anchor xml:id="_parser_8py_source_1l00128"/>00128 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;home&#32;string</emphasis>
<anchor xml:id="_parser_8py_source_1l00129"/>00129 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&apos;&apos;&apos;</emphasis>
<anchor xml:id="_parser_8py_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;pars_start&quot;</emphasis>)
<anchor xml:id="_parser_8py_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1aa4d243133ee2225c281004cada6c617f">driver</link>.get(self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1a23885f0e3a25fe52b40160bf50b95d86">url_main</link>&#32;+&#32;<emphasis role="stringliteral">&quot;/10743/category/ovoshchi_griby_i_zelen&quot;</emphasis>)
<anchor xml:id="_parser_8py_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ukaz_adr&#32;=&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1ab11214453defaf1caacb34e33abbe04f">wait</link>.until(EC.presence_of_element_located((By.XPATH,&#32;<emphasis role="stringliteral">&apos;//*[@id=&quot;root&quot;]/div[2]/header/div[5]/button&apos;</emphasis>)))
<anchor xml:id="_parser_8py_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ukaz_adr.click()
<anchor xml:id="_parser_8py_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;adr_start&quot;</emphasis>)
<anchor xml:id="_parser_8py_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1ab11214453defaf1caacb34e33abbe04f">wait</link>.until(EC.presence_of_element_located((By.CLASS_NAME,&#32;<emphasis role="stringliteral">&apos;c12fmzph&apos;</emphasis>)))
<anchor xml:id="_parser_8py_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;asyncio.sleep(1)
<anchor xml:id="_parser_8py_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kr&#32;=&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1ab11214453defaf1caacb34e33abbe04f">wait</link>.until(EC.element_to_be_clickable(
<anchor xml:id="_parser_8py_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(By.XPATH,&#32;<emphasis role="stringliteral">&apos;/html/body/div[2]/div[3]/div/div/div/div[1]/div[2]/div[1]/div/button&apos;</emphasis>)))
<anchor xml:id="_parser_8py_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kr.click()
<anchor xml:id="_parser_8py_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;adr_inp&#32;=&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1aa4d243133ee2225c281004cada6c617f">driver</link>.find_element(By.CLASS_NAME,&#32;<emphasis role="stringliteral">&apos;i164506l&apos;</emphasis>)
<anchor xml:id="_parser_8py_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;lit&#32;<emphasis role="keywordflow">in</emphasis>&#32;city_street:
<anchor xml:id="_parser_8py_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;adr_inp.send_keys(lit)
<anchor xml:id="_parser_8py_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;asyncio.sleep(0.1)
<anchor xml:id="_parser_8py_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;adr_inp.send_keys(<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>)
<anchor xml:id="_parser_8py_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;asyncio.sleep(1)
<anchor xml:id="_parser_8py_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;lit&#32;<emphasis role="keywordflow">in</emphasis>&#32;home:
<anchor xml:id="_parser_8py_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;adr_inp.send_keys(lit)
<anchor xml:id="_parser_8py_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;asyncio.sleep(1)
<anchor xml:id="_parser_8py_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;asyncio.sleep(5)
<anchor xml:id="_parser_8py_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;adr_inp.send_keys(Keys.DOWN)
<anchor xml:id="_parser_8py_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;adr_inp.send_keys(Keys.ENTER)
<anchor xml:id="_parser_8py_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ok&#32;=&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1ab11214453defaf1caacb34e33abbe04f">wait</link>.until(
<anchor xml:id="_parser_8py_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EC.element_to_be_clickable((By.XPATH,&#32;<emphasis role="stringliteral">&apos;/html/body/div[2]/div[3]/div/div/div/div[1]/div[2]/div[2]/button&apos;</emphasis>)))
<anchor xml:id="_parser_8py_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ok.click()
<anchor xml:id="_parser_8py_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1ab11214453defaf1caacb34e33abbe04f">wait</link>.until(EC.presence_of_element_located((By.CLASS_NAME,&#32;<emphasis role="stringliteral">&apos;s17r5x1&apos;</emphasis>)))
<anchor xml:id="_parser_8py_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;adr_finish&quot;</emphasis>)
<anchor xml:id="_parser_8py_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k&#32;=&#32;6
<anchor xml:id="_parser_8py_source_1l00158"/>00158 
<anchor xml:id="_parser_8py_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;j&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(0,&#32;k):
<anchor xml:id="_parser_8py_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tasks&#32;=&#32;[]
<anchor xml:id="_parser_8py_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;loop1&#32;=&#32;asyncio.get_event_loop()
<anchor xml:id="_parser_8py_source_1l00162"/>00162 
<anchor xml:id="_parser_8py_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;j
<anchor xml:id="_parser_8py_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tabi&#32;=&#32;1
<anchor xml:id="_parser_8py_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;i&#32;&lt;&#32;len(self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1ad7973256e11d6291b8641b3e438ca595">urls</link>):
<anchor xml:id="_parser_8py_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1aa4d243133ee2225c281004cada6c617f">driver</link>.execute_script(f<emphasis role="stringliteral">&quot;window.open(&apos;{self.urls[i]}&apos;,&#32;&apos;tab{tabi}&apos;);&quot;</emphasis>)
<anchor xml:id="_parser_8py_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;i&#32;+&#32;k
<anchor xml:id="_parser_8py_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tabi&#32;=&#32;tabi&#32;+&#32;1
<anchor xml:id="_parser_8py_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;j
<anchor xml:id="_parser_8py_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tabi&#32;=&#32;1
<anchor xml:id="_parser_8py_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;i&#32;&lt;&#32;len(self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1ad7973256e11d6291b8641b3e438ca595">urls</link>):
<anchor xml:id="_parser_8py_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1aa4d243133ee2225c281004cada6c617f">driver</link>.switch_to.window(f<emphasis role="stringliteral">&apos;tab{tabi}&apos;</emphasis>)
<anchor xml:id="_parser_8py_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;html&#32;=&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1aa4d243133ee2225c281004cada6c617f">driver</link>.page_source
<anchor xml:id="_parser_8py_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task&#32;=&#32;loop1.create_task(self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1aa85beac3725cdc9934390e1c49fcb9f1">get_data_html</link>(html))
<anchor xml:id="_parser_8py_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tasks.append(task)
<anchor xml:id="_parser_8py_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;i&#32;+&#32;k
<anchor xml:id="_parser_8py_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tabi&#32;=&#32;tabi&#32;+&#32;1
<anchor xml:id="_parser_8py_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;asyncio.wait(tasks)
<anchor xml:id="_parser_8py_source_1l00179"/>00179 
<anchor xml:id="_parser_8py_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classbym_1_1_b_y_m__project_1_1main__app_1_1parser_1_1_lavka_1aa4d243133ee2225c281004cada6c617f">driver</link>.quit()
<anchor xml:id="_parser_8py_source_1l00181"/>00181 
<anchor xml:id="_parser_8py_source_1l00182"/>00182 <emphasis role="comment">#&#32;a&#32;=&#32;Lavka()</emphasis>
<anchor xml:id="_parser_8py_source_1l00183"/>00183 <emphasis role="comment">#&#32;asyncio.run(a.pars(&quot;Москва,&#32;Таллинская&#32;улица&quot;,&quot;34&quot;))</emphasis>
</programlisting></section>
